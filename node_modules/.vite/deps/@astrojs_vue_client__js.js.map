{
  "version": 3,
  "sources": ["../../@astrojs/vue/client.js", "../../@astrojs/vue/static-html.js"],
  "sourcesContent": ["import { h, createSSRApp, createApp, Suspense } from 'vue';\r\nimport { setup } from 'virtual:@astrojs/vue/app';\r\nimport StaticHtml from './static-html.js';\r\n\r\nexport default (element) =>\r\n\tasync (Component, props, slotted, { client }) => {\r\n\t\tdelete props['class'];\r\n\t\tif (!element.hasAttribute('ssr')) return;\r\n\r\n\t\t// Expose name on host component for Vue devtools\r\n\t\tconst name = Component.name ? `${Component.name} Host` : undefined;\r\n\t\tconst slots = {};\r\n\t\tfor (const [key, value] of Object.entries(slotted)) {\r\n\t\t\tslots[key] = () => h(StaticHtml, { value, name: key === 'default' ? undefined : key });\r\n\t\t}\r\n\r\n\t\tlet content = h(Component, props, slots);\r\n\t\t// related to https://github.com/withastro/astro/issues/6549\r\n\t\t// if the component is async, wrap it in a Suspense component\r\n\t\tif (isAsync(Component.setup)) {\r\n\t\t\tcontent = h(Suspense, null, content);\r\n\t\t}\r\n\r\n\t\tif (client === 'only') {\r\n\t\t\tconst app = createApp({ name, render: () => content });\r\n\t\t\tawait setup(app);\r\n\t\t\tapp.mount(element, false);\r\n\t\t} else {\r\n\t\t\tconst app = createSSRApp({ name, render: () => content });\r\n\t\t\tawait setup(app);\r\n\t\t\tapp.mount(element, true);\r\n\t\t}\r\n\t};\r\n\r\nfunction isAsync(fn) {\r\n\tconst constructor = fn?.constructor;\r\n\treturn constructor && constructor.name === 'AsyncFunction';\r\n}\r\n", "import { h, defineComponent } from 'vue';\r\n\r\n/**\r\n * Astro passes `children` as a string of HTML, so we need\r\n * a wrapper `div` to render that content as VNodes.\r\n *\r\n * This is the Vue + JSX equivalent of using `<div v-html=\"value\" />`\r\n */\r\nconst StaticHtml = defineComponent({\r\n\tprops: {\r\n\t\tvalue: String,\r\n\t\tname: String,\r\n\t},\r\n\tsetup({ name, value }) {\r\n\t\tif (!value) return () => null;\r\n\t\treturn () => h('astro-slot', { name, innerHTML: value });\r\n\t},\r\n});\r\n\r\n/**\r\n * Other frameworks have `shouldComponentUpdate` in order to signal\r\n * that this subtree is entirely static and will not be updated\r\n *\r\n * Fortunately, Vue is smart enough to figure that out without any\r\n * help from us, so this just works out of the box!\r\n */\r\n\r\nexport default StaticHtml;\r\n"],
  "mappings": ";;;;;;;;;AACA,SAAS,aAAa;;;ACOtB,IAAM,aAAa,gBAAgB;AAAA,EAClC,OAAO;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,EACP;AAAA,EACA,MAAM,EAAE,MAAM,MAAM,GAAG;AACtB,QAAI,CAAC;AAAO,aAAO,MAAM;AACzB,WAAO,MAAM,EAAE,cAAc,EAAE,MAAM,WAAW,MAAM,CAAC;AAAA,EACxD;AACD,CAAC;AAUD,IAAO,sBAAQ;;;ADvBf,IAAO,iBAAQ,CAAC,YACf,OAAO,WAAW,OAAO,SAAS,EAAE,OAAO,MAAM;AAChD,SAAO,MAAM,OAAO;AACpB,MAAI,CAAC,QAAQ,aAAa,KAAK;AAAG;AAGlC,QAAM,OAAO,UAAU,OAAO,GAAG,UAAU,cAAc;AACzD,QAAM,QAAQ,CAAC;AACf,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,GAAG;AACnD,UAAM,GAAG,IAAI,MAAM,EAAE,qBAAY,EAAE,OAAO,MAAM,QAAQ,YAAY,SAAY,IAAI,CAAC;AAAA,EACtF;AAEA,MAAI,UAAU,EAAE,WAAW,OAAO,KAAK;AAGvC,MAAI,QAAQ,UAAU,KAAK,GAAG;AAC7B,cAAU,EAAE,UAAU,MAAM,OAAO;AAAA,EACpC;AAEA,MAAI,WAAW,QAAQ;AACtB,UAAM,MAAM,UAAU,EAAE,MAAM,QAAQ,MAAM,QAAQ,CAAC;AACrD,UAAM,MAAM,GAAG;AACf,QAAI,MAAM,SAAS,KAAK;AAAA,EACzB,OAAO;AACN,UAAM,MAAM,aAAa,EAAE,MAAM,QAAQ,MAAM,QAAQ,CAAC;AACxD,UAAM,MAAM,GAAG;AACf,QAAI,MAAM,SAAS,IAAI;AAAA,EACxB;AACD;AAED,SAAS,QAAQ,IAAI;AACpB,QAAM,cAAc,yBAAI;AACxB,SAAO,eAAe,YAAY,SAAS;AAC5C;",
  "names": []
}
